{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Ejercicios Git y GitHub Repositorio DEAW Crear un repositorio en vuestro GitHub llamado DEAW. Y lo clonamos en local README Creamos un archivo README.md Commit y push inicial Ignorar archivos Creamos en el repositorio local un fichero llamado privado.txt y una carpeta \"privada\": Creamos un archivo .gitignore en nuestro repositorio que incluye los nombres de archivos y directorios que no se subir\u00e1n (se puede incluir el propio archivo para que este tampoco se suba): Crear el tag v0.1 Creamos un archivo llamado 1.txt Creamos el tag v0.1 y subimos los cambios al repositorio remoto: Cuenta de GitHub As\u00ed cambiamos nuestra foto de perfil: Y de la siguiente forma a\u00f1adimos el doble factor de autentificaci\u00f3n en nuestra cuenta: Uso social de GitHub Seguimos a 2 compa\u00f1eros de clase en github: Seguimos los repositorios DEAW de mis compa\u00f1eros y le damos una estrella: Colaboradores A\u00f1adimos a uno de ellos de colaborador de nuestro repositorio DEAW: Crear una rama v0.2 Vamos a crear una rama llamada v0.2, en la cual crearemos un archivo 2.txt y lo subiremos al repositorio remoto en su respectiva rama: Merge directo Nos posicionamos en la rama master y hacemos un merge de la rama v0.2 en la rama master: Merge con conflicto En la rama master poner Hola en el fichero 1.txt y hacer commit. Posicionarse en la rama v0.2 y poner Adios en el fichero \"1.txt\" y hacer commit. Posicionarse de nuevo en la rama master y hacer un merge con la rama v0.2 Listado de ramas Arreglar conflicto Arreglamos el conflicto: Borrar rama Crear un tag v0.2 Borrar la rama v0.2 Listado de cambios Ejercicios de creaci\u00f3n y actualizaci\u00f3n de repositorios Ejercicio 1 Configurar Git definiendo el nombre del usuario, el correo electr\u00f3nico y activar el coloreado de la salida. Mostrar la configuraci\u00f3n final. Ejercicio 2 Crear un repositorio nuevo con el nombre libro y mostrar su contenido. Ejercicio 3 Comprobar el estado del repositorio. Crear un fichero indice.txt con el siguiente contenido: Cap\u00edtulo 1: Introducci\u00f3n a Git Cap\u00edtulo 2: Flujo de trabajo b\u00e1sico Cap\u00edtulo 3: Repositorios remotos Comprobar de nuevo el estado del repositorio. A\u00f1adir el fichero a la zona de intercambio temporal. Volver a comprobar una vez m\u00e1s el estado del repositorio. Ejercicio 4 Realizar un commit de los \u00faltimos cambios con el mensaje \u201cA\u00f1adido \u00edndice del libro.\u201d y ver el estado del repositorio. Ejercicio 5 Cambiar el fichero indice.txt para que contenga lo siguiente: Cap\u00edtulo 1: Introducci\u00f3n a Git Cap\u00edtulo 2: Flujo de trabajo b\u00e1sico Cap\u00edtulo 3: Gesti\u00f3n de ramas Cap\u00edtulo 4: Repositorios remotos Mostrar los cambios con respecto a la \u00faltima versi\u00f3n guardada en el repositorio. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas\u201d. Ejercicio 6 Mostrar los cambios de la \u00faltima versi\u00f3n del repositorio con respecto a la anterior. Cambiar el mensaje del \u00faltimo commit por \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas al \u00edndice.\u201d Volver a mostrar los \u00faltimos cambios del repositorio. Ejercicios de manejo del historial de cambios Ejercicio 1 Mostrar el historial de cambios del repositorio. Crear la carpeta capitulos y crear dentro de ella el fichero capitulo1.txt con el siguiente texto: Git es un sistema de control de versiones ideado por Linus Torvalds. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 1.\u201d Volver a mostrar el historial de cambios del repositorio. Ejercicio 2 Crear el fichero capitulo2.txt en la carpeta capitulos con el siguiente texto: El flujo de trabajo b\u00e1sico con Git consiste en: 1- Hacer cambios en el repositorio. 2- A\u00f1adir los cambios a la zona de intercambio temporal. 3- Hacer un commit de los cambios. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 2.\u201d Mostrar las diferencias entre la \u00faltima versi\u00f3n y dos versiones anteriores. Ejercicio 3 Crear el fichero capitulo3.txt en la carpeta capitulos con el siguiente texto: Git permite la creaci\u00f3n de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3.\u201d Mostrar las diferencias entre la primera y la \u00faltima versi\u00f3n del repositorio. Ejercicio 4 A\u00f1adir al final del fichero indice.txt la siguiente l\u00ednea: Cap\u00edtulo 5: Conceptos avanzados A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 5 al \u00edndice.\u201d Mostrar qui\u00e9n ha hecho cambios sobre el fichero indice.txt . Ejercicios de deshacer cambios Ejercicio 1 Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Comprobar el estado del repositorio. Deshacer los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero. Volver a comprobar el estado del repositorio. Ejercicio 2 Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. A\u00f1adir los cambios a la zona de intercambio temporal. Comprobar de nuevo el estado del repositorio. Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. Comprobar de nuevo el estado del repositorio. Deshacer los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero. Volver a comprobar el estado del repositorio. Ejercicio 3 Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Eliminar el fichero capitulos/capitulo3.txt . A\u00f1adir un fichero nuevo capitulos/capitulo4.txt vac\u00edo. A\u00f1adir los cambios a la zona de intercambio temporal. Comprobar de nuevo el estado del repositorio. Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. Comprobar de nuevo el estado del repositorio. Deshacer los cambios realizados para volver a la versi\u00f3n del repositorio. Volver a comprobar el estado del repositorio. Ejercicio 4 Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Eliminar el fichero capitulos/capitulo3.txt . A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cBorrado accidental.\u201d Comprobar el historial del repositorio. Deshacer el \u00faltimo commit pero mantener los cambios anteriores en el directorio de trabajo y la zona de intercambio temporal. Comprobar el historial y el estado del repositorio. Volver a hacer el commit con el mismo mensaje de antes. Deshacer el \u00faltimo commit y los cambios anteriores del directorio de trabajo volviendo a la versi\u00f3n anterior del repositorio. Comprobar de nuevo el historial y el estado del repositorio. Ejercicios de gesti\u00f3n de ramas Ejercicio 1 Crear una nueva rama bibliografia y mostrar las ramas del repositorio. Ejercicio 2 Crear el fichero capitulos/capitulo4.txt y a\u00f1adir el texto siguiente: En este cap\u00edtulo veremos c\u00f3mo usar GitHub para alojar repositorios en remoto. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adido cap\u00edtulo 4.\u201d Mostrar la historia del repositorio incluyendo todas las ramas. Ejercicio 3 Cambiar a la rama bibliografia . Crear el fichero bibliografia.txt y a\u00f1adir la siguiente referencia: Chacon, S. and Straub, B. Pro Git. Apress. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adida primera referencia bibliogr\u00e1fica.\u201d Mostrar la historia del repositorio incluyendo todas las ramas. Ejercicio 4 Fusionar la rama bibliografia con la rama master . Mostrar la historia del repositorio incluyendo todas las ramas. Eliminar la rama bibliografia . Mostrar de nuevo la historia del repositorio incluyendo todas las ramas. Ejercicio 5 Crear la rama bibliografia . Cambiar a la rama bibliografia . Cambiar el fichero bibliografia.txt para que contenga las siguientes referencias: Scott Chacon and Ben Straub. Pro Git. Apress. Ryan Hodson. Ry\u2019s Git Tutorial. Smashwords (2014) A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d Cambiar a la rama master . Cambiar el fichero bibliografia.txt para que contenga las siguientes referencias: Chacon, S. and Straub, B. Pro Git. Apress. Loeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly. A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d Fusionar la rama bibliografia con la rama master . Resolver el conflicto dejando el fichero bibliografia.txt con las referencias: Chacon, S. and Straub, B. Pro Git. Apress. Loeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly. Hodson, R. Ry\u2019s Git Tutorial A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cResuelto conflicto de bibliograf\u00eda.\u201d Mostrar la historia del repositorio incluyendo todas las ramas. Ejercicios de repositorios remotos Ejercicio 1 Crear un nuevo repositorio p\u00fablico en GitHub con el nombre libro-git. A\u00f1adirlo al repositorio local del libro. Mostrar todos los repositorios remotos configurados. Ejercicio 2 A\u00f1adir los cambios del repositorio local al repositorio remoto de GitHub. Acceder a GitHub y comprobar que se han subido los cambios mostrando el historial de versiones.","title":"Ejercicios Git y GitHub"},{"location":"#ejercicios-git-y-github","text":"","title":"Ejercicios Git y GitHub"},{"location":"#repositorio-deaw","text":"Crear un repositorio en vuestro GitHub llamado DEAW. Y lo clonamos en local","title":"Repositorio DEAW"},{"location":"#readme","text":"Creamos un archivo README.md","title":"README"},{"location":"#commit-y-push-inicial","text":"","title":"Commit y push inicial"},{"location":"#ignorar-archivos","text":"Creamos en el repositorio local un fichero llamado privado.txt y una carpeta \"privada\": Creamos un archivo .gitignore en nuestro repositorio que incluye los nombres de archivos y directorios que no se subir\u00e1n (se puede incluir el propio archivo para que este tampoco se suba):","title":"Ignorar archivos"},{"location":"#crear-el-tag-v01","text":"Creamos un archivo llamado 1.txt Creamos el tag v0.1 y subimos los cambios al repositorio remoto:","title":"Crear el tag v0.1"},{"location":"#cuenta-de-github","text":"As\u00ed cambiamos nuestra foto de perfil: Y de la siguiente forma a\u00f1adimos el doble factor de autentificaci\u00f3n en nuestra cuenta:","title":"Cuenta de GitHub"},{"location":"#uso-social-de-github","text":"Seguimos a 2 compa\u00f1eros de clase en github: Seguimos los repositorios DEAW de mis compa\u00f1eros y le damos una estrella:","title":"Uso social de GitHub"},{"location":"#colaboradores","text":"A\u00f1adimos a uno de ellos de colaborador de nuestro repositorio DEAW:","title":"Colaboradores"},{"location":"#crear-una-rama-v02","text":"Vamos a crear una rama llamada v0.2, en la cual crearemos un archivo 2.txt y lo subiremos al repositorio remoto en su respectiva rama:","title":"Crear una rama v0.2"},{"location":"#merge-directo","text":"Nos posicionamos en la rama master y hacemos un merge de la rama v0.2 en la rama master:","title":"Merge directo"},{"location":"#merge-con-conflicto","text":"En la rama master poner Hola en el fichero 1.txt y hacer commit. Posicionarse en la rama v0.2 y poner Adios en el fichero \"1.txt\" y hacer commit. Posicionarse de nuevo en la rama master y hacer un merge con la rama v0.2","title":"Merge con conflicto"},{"location":"#listado-de-ramas","text":"","title":"Listado de ramas"},{"location":"#arreglar-conflicto","text":"Arreglamos el conflicto:","title":"Arreglar conflicto"},{"location":"#borrar-rama","text":"Crear un tag v0.2 Borrar la rama v0.2","title":"Borrar rama"},{"location":"#listado-de-cambios","text":"","title":"Listado de cambios"},{"location":"#ejercicios-de-creacion-y-actualizacion-de-repositorios","text":"","title":"Ejercicios de creaci\u00f3n y actualizaci\u00f3n de repositorios"},{"location":"#ejercicio-1","text":"Configurar Git definiendo el nombre del usuario, el correo electr\u00f3nico y activar el coloreado de la salida. Mostrar la configuraci\u00f3n final.","title":"Ejercicio 1"},{"location":"#ejercicio-2","text":"Crear un repositorio nuevo con el nombre libro y mostrar su contenido.","title":"Ejercicio 2"},{"location":"#ejercicio-3","text":"Comprobar el estado del repositorio. Crear un fichero indice.txt con el siguiente contenido: Cap\u00edtulo 1: Introducci\u00f3n a Git Cap\u00edtulo 2: Flujo de trabajo b\u00e1sico Cap\u00edtulo 3: Repositorios remotos Comprobar de nuevo el estado del repositorio. A\u00f1adir el fichero a la zona de intercambio temporal. Volver a comprobar una vez m\u00e1s el estado del repositorio.","title":"Ejercicio 3"},{"location":"#ejercicio-4","text":"Realizar un commit de los \u00faltimos cambios con el mensaje \u201cA\u00f1adido \u00edndice del libro.\u201d y ver el estado del repositorio.","title":"Ejercicio 4"},{"location":"#ejercicio-5","text":"Cambiar el fichero indice.txt para que contenga lo siguiente: Cap\u00edtulo 1: Introducci\u00f3n a Git Cap\u00edtulo 2: Flujo de trabajo b\u00e1sico Cap\u00edtulo 3: Gesti\u00f3n de ramas Cap\u00edtulo 4: Repositorios remotos Mostrar los cambios con respecto a la \u00faltima versi\u00f3n guardada en el repositorio. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas\u201d.","title":"Ejercicio 5"},{"location":"#ejercicio-6","text":"Mostrar los cambios de la \u00faltima versi\u00f3n del repositorio con respecto a la anterior. Cambiar el mensaje del \u00faltimo commit por \u201cA\u00f1adido cap\u00edtulo 3 sobre gesti\u00f3n de ramas al \u00edndice.\u201d Volver a mostrar los \u00faltimos cambios del repositorio.","title":"Ejercicio 6"},{"location":"#ejercicios-de-manejo-del-historial-de-cambios","text":"","title":"Ejercicios de manejo del historial de cambios"},{"location":"#ejercicio-1_1","text":"Mostrar el historial de cambios del repositorio. Crear la carpeta capitulos y crear dentro de ella el fichero capitulo1.txt con el siguiente texto: Git es un sistema de control de versiones ideado por Linus Torvalds. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 1.\u201d Volver a mostrar el historial de cambios del repositorio.","title":"Ejercicio 1"},{"location":"#ejercicio-2_1","text":"Crear el fichero capitulo2.txt en la carpeta capitulos con el siguiente texto: El flujo de trabajo b\u00e1sico con Git consiste en: 1- Hacer cambios en el repositorio. 2- A\u00f1adir los cambios a la zona de intercambio temporal. 3- Hacer un commit de los cambios. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 2.\u201d Mostrar las diferencias entre la \u00faltima versi\u00f3n y dos versiones anteriores.","title":"Ejercicio 2"},{"location":"#ejercicio-3_1","text":"Crear el fichero capitulo3.txt en la carpeta capitulos con el siguiente texto: Git permite la creaci\u00f3n de ramas lo que permite tener distintas versiones del mismo proyecto y trabajar de manera simultanea en ellas. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 3.\u201d Mostrar las diferencias entre la primera y la \u00faltima versi\u00f3n del repositorio.","title":"Ejercicio 3"},{"location":"#ejercicio-4_1","text":"A\u00f1adir al final del fichero indice.txt la siguiente l\u00ednea: Cap\u00edtulo 5: Conceptos avanzados A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit de los cambios con el mensaje \u201cA\u00f1adido cap\u00edtulo 5 al \u00edndice.\u201d Mostrar qui\u00e9n ha hecho cambios sobre el fichero indice.txt .","title":"Ejercicio 4"},{"location":"#ejercicios-de-deshacer-cambios","text":"","title":"Ejercicios de deshacer cambios"},{"location":"#ejercicio-1_2","text":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Comprobar el estado del repositorio. Deshacer los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero. Volver a comprobar el estado del repositorio.","title":"Ejercicio 1"},{"location":"#ejercicio-2_2","text":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. A\u00f1adir los cambios a la zona de intercambio temporal. Comprobar de nuevo el estado del repositorio. Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. Comprobar de nuevo el estado del repositorio. Deshacer los cambios realizados en el fichero indice.txt para volver a la versi\u00f3n anterior del fichero. Volver a comprobar el estado del repositorio.","title":"Ejercicio 2"},{"location":"#ejercicio-3_2","text":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Eliminar el fichero capitulos/capitulo3.txt . A\u00f1adir un fichero nuevo capitulos/capitulo4.txt vac\u00edo. A\u00f1adir los cambios a la zona de intercambio temporal. Comprobar de nuevo el estado del repositorio. Quitar los cambios de la zona de intercambio temporal, pero mantenerlos en el directorio de trabajo. Comprobar de nuevo el estado del repositorio. Deshacer los cambios realizados para volver a la versi\u00f3n del repositorio. Volver a comprobar el estado del repositorio.","title":"Ejercicio 3"},{"location":"#ejercicio-4_2","text":"Eliminar la \u00faltima l\u00ednea del fichero indice.txt y guardarlo. Eliminar el fichero capitulos/capitulo3.txt . A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cBorrado accidental.\u201d Comprobar el historial del repositorio. Deshacer el \u00faltimo commit pero mantener los cambios anteriores en el directorio de trabajo y la zona de intercambio temporal. Comprobar el historial y el estado del repositorio. Volver a hacer el commit con el mismo mensaje de antes. Deshacer el \u00faltimo commit y los cambios anteriores del directorio de trabajo volviendo a la versi\u00f3n anterior del repositorio. Comprobar de nuevo el historial y el estado del repositorio.","title":"Ejercicio 4"},{"location":"#ejercicios-de-gestion-de-ramas","text":"","title":"Ejercicios de gesti\u00f3n de ramas"},{"location":"#ejercicio-1_3","text":"Crear una nueva rama bibliografia y mostrar las ramas del repositorio.","title":"Ejercicio 1"},{"location":"#ejercicio-2_3","text":"Crear el fichero capitulos/capitulo4.txt y a\u00f1adir el texto siguiente: En este cap\u00edtulo veremos c\u00f3mo usar GitHub para alojar repositorios en remoto. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adido cap\u00edtulo 4.\u201d Mostrar la historia del repositorio incluyendo todas las ramas.","title":"Ejercicio 2"},{"location":"#ejercicio-3_3","text":"Cambiar a la rama bibliografia . Crear el fichero bibliografia.txt y a\u00f1adir la siguiente referencia: Chacon, S. and Straub, B. Pro Git. Apress. A\u00f1adir los cambios a la zona de intercambio temporal. Hacer un commit con el mensaje \u201cA\u00f1adida primera referencia bibliogr\u00e1fica.\u201d Mostrar la historia del repositorio incluyendo todas las ramas.","title":"Ejercicio 3"},{"location":"#ejercicio-4_3","text":"Fusionar la rama bibliografia con la rama master . Mostrar la historia del repositorio incluyendo todas las ramas. Eliminar la rama bibliografia . Mostrar de nuevo la historia del repositorio incluyendo todas las ramas.","title":"Ejercicio 4"},{"location":"#ejercicio-5_1","text":"Crear la rama bibliografia . Cambiar a la rama bibliografia . Cambiar el fichero bibliografia.txt para que contenga las siguientes referencias: Scott Chacon and Ben Straub. Pro Git. Apress. Ryan Hodson. Ry\u2019s Git Tutorial. Smashwords (2014) A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d Cambiar a la rama master . Cambiar el fichero bibliografia.txt para que contenga las siguientes referencias: Chacon, S. and Straub, B. Pro Git. Apress. Loeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly. A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cA\u00f1adida nueva referencia bibliogr\u00e1fica.\u201d Fusionar la rama bibliografia con la rama master . Resolver el conflicto dejando el fichero bibliografia.txt con las referencias: Chacon, S. and Straub, B. Pro Git. Apress. Loeliger, J. and McCullough, M. Version control with Git. O\u2019Reilly. Hodson, R. Ry\u2019s Git Tutorial A\u00f1adir los cambios a la zona de intercambio temporal y hacer un commit con el mensaje \u201cResuelto conflicto de bibliograf\u00eda.\u201d Mostrar la historia del repositorio incluyendo todas las ramas.","title":"Ejercicio 5"},{"location":"#ejercicios-de-repositorios-remotos","text":"","title":"Ejercicios de repositorios remotos"},{"location":"#ejercicio-1_4","text":"Crear un nuevo repositorio p\u00fablico en GitHub con el nombre libro-git. A\u00f1adirlo al repositorio local del libro. Mostrar todos los repositorios remotos configurados.","title":"Ejercicio 1"},{"location":"#ejercicio-2_4","text":"A\u00f1adir los cambios del repositorio local al repositorio remoto de GitHub. Acceder a GitHub y comprobar que se han subido los cambios mostrando el historial de versiones.","title":"Ejercicio 2"}]}